<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>app</artifactId>
    <packaging>war</packaging>

    <parent>
        <artifactId>AccountMgmr</artifactId>
        <groupId>com.example</groupId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <dependencies>

        <!-- 加入其余模块的依赖 -->
        <dependency>
            <groupId>org.ayo</groupId>
            <artifactId>core</artifactId>
            <version>0.0.1-SNAPSHOT</version>
<!--            <type>jar</type>-->



        </dependency>
<!--        <dependency>-->
<!--            <groupId>com.example</groupId>-->
<!--            <artifactId>app</artifactId>-->
<!--            <version>0.0.1-SNAPSHOT</version>-->
<!--            &lt;!&ndash; 因为static是war打包方式 所以必须声明，不然默认为jar包方式 &ndash;&gt;-->
<!--            <type>war</type>-->
<!--        </dependency>-->

        <dependency>
            <groupId>it.sauronsoftware</groupId>
            <artifactId>jave</artifactId>
            <scope>system</scope>
            <version>2.0.1</version>
            <systemPath>${project.basedir}/src/main/resources/lib/sauronsoftware-jave-20.jar</systemPath>
        </dependency>
    </dependencies>


    <build>
<!--        <resources>-->
<!--            <resource>-->
<!--                <directory>src/main/java</directory>-->
<!--                <includes>-->
<!--                    <include>**/*.xml</include>-->
<!--                </includes>-->
<!--            </resource>-->
<!--            <resource>-->
<!--                <directory>src/main/resources</directory>-->
<!--                <includes>-->
<!--                    <include>**.*</include>-->
<!--                    <include>**/*.*</include>&lt;!&ndash; i18n能读取到 &ndash;&gt;-->
<!--                    <include>**/*/*.*</include>-->
<!--                </includes>-->
<!--            </resource>-->
<!--        </resources>-->
<!--        <plugins>-->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <fork>true</fork> &lt;!&ndash; 如果没有该配置，devtools不会生效 &ndash;&gt;-->
<!--                    &lt;!&ndash; 指定该Main Class为全局的唯一入口 &ndash;&gt;-->
<!--                    <mainClass>com.danger.App</mainClass>-->
<!--                    <layout>ZIP</layout>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>repackage</goal>&lt;!&ndash;可以把依赖的包都打包到生成的Jar包中&ndash;&gt;-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <source>1.8</source>-->
<!--                    <target>1.8</target>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--        </plugins>-->

        <finalName>ROOT</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <includeSystemScope>true</includeSystemScope>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>